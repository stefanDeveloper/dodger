---
- name: Create folder for traefik
  ansible.builtin.file:
    path: "{{ traefik_docker_path }}"
    state: directory
    mode: 0700
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Create Traefik network
  community.docker.docker_network:
    name: proxy
    ipam_config:
      - subnet: 172.18.0.0/16

- name: Create logrotate for Traefik
  ansible.builtin.blockinfile:
    path: "/etc/logrotate.d/{{ item.path }}"
    block: "{{ item.conf }}"
    create: true
  loop: "{{ lp_logrotate_confd }}"

- name: Start Traefik
  community.docker.docker_container:
    name: traefik
    hostname: traefik
    image: "traefik:latest"
    restart_policy: unless-stopped
    command: 
      - "--api=true"
      - "--accesslog=true"
      # - "--accesslog.filepath=/var/log/traefik/traefik.log"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email={{ traefik_mail }}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.mytlschallenge.acme.keytype=EC384"
      - "--certificatesresolvers.mytlschallenge.acme.preferredchain='ISRG Root X1'"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "443:443"
    volumes:
      - "{{ traefik_docker_path }}/letsencrypt:/letsencrypt"
      # - "/var/log/traefik/:/var/log/traefik/"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      traefik.enable: "true"
      # Dashboard
      traefik.http.routers.traefik.rule: "Host(`{{ traefik_domain }}`)"
      traefik.http.routers.traefik.service: "api@internal"
      traefik.http.routers.traefik.tls.certresolver: "mytlschallenge"
      traefik.http.routers.traefik.entrypoints: "websecure"
      # traefik.http.routers.traefik.middlewares: "dashboardauth"
      # traefik.http.middlewares.dashboardauth.basicauth.users: "admin:{SHA}{{ traefik_dashboard_password }}"

       # Global redirection: http to https
      traefik.http.routers.http-catchall.rule: "HostRegexp(`{host:(www.)?.+}`)"
      traefik.http.routers.http-catchall.entrypoints: "web"
      traefik.http.routers.http-catchall.middlewares: "wwwtohttps"

      # Global redirection: https (www.) to https
      traefik.http.routers.wwwsecure-catchall.rule: "HostRegexp(`{host:(www.).+}`)"
      traefik.http.routers.wwwsecure-catchall.entrypoints: "websecure"
      traefik.http.routers.wwwsecure-catchall.tls: "true"
      traefik.http.routers.wwwsecure-catchall.middlewares: "wwwtohttps"

      # middleware: http(s)://(www.) to  https://
      traefik.http.middlewares.wwwtohttps.redirectregex.regex: "^https?:\/\/(?:www.)?(.+)"
      traefik.http.middlewares.wwwtohttps.redirectregex.replacement: "https://$${1}"
      traefik.http.middlewares.wwwtohttps.redirectregex.permanent: "true"

    networks:
      - name: proxy

# code: language=ansible
